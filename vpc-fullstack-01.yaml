# Network Design Patterns
# "1 tier | 1 subnet | public"
# "1 tier | 2 subnet | public"
# "2 tier | 1 subnet public | 1 subnet private | 1 nat"
# "2 tier | 2 subnets public | 2 subnets private | 1 nat"
# "3 tier | 1 subnet public | 1 subnet private | 1 subnet database | 1 nat"
# "3 tier | 2 subnets public | 2 subnets private | 2 subnets database | 1 nat"

AWSTemplateFormatVersion: 2010-09-09

Description: Creates VPC, Subnets, Internet Gateway, Nat Gateways, RouteTables, Security Groups and more.

Metadata:
  Authors:
    Description: Apper DevOps (developers@apper.ph) - Apper Digital Inc.
  License:
    Description:
      "Copyright 2020 Amazon.com, Inc. and its affiliates. All Rights Reserved.
      SPDX-License-Identifier: MIT-0"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Amazon VPC Parameters
        Parameters:
          - EnvironmentName
          - NetworkDesignPatterns
          - VpcCidr
          - SubnetsCidrBlock
    ParameterLabels:
      EnvironmentName:
        default: Environment Name
      NetworkDesignPatterns:
        default: Network Design Patterns
      VpcCidr:
        default: VPC CIDR Block
      SubnetsCidrBlock:
        default: Subnets CIDR Blocks
Parameters:
  EnvironmentName:
    Description: The name of environment for the current stack (e.g. dev, test, staging, beta, production).
    Type: String
  NetworkDesignPatterns:
    Description: The design pattern of the current vpc network architecture based from industry standards and cost tradeoffs
    Type: String
    AllowedValues:
      - "1 tier | 1 subnet | public"
      - "1 tier | 2 subnet | public"
      - "2 tier | 1 subnet public | 1 subnet private | 1 nat"
      - "2 tier | 2 subnets public | 2 subnets private | 1 nat"
      - "3 tier | 1 subnet public | 1 subnet private | 1 subnet database | 1 nat"
      - "3 tier | 2 subnets public | 2 subnets private | 2 subnets database | 1 nat"
    Default: "1 tier | 2 subnet | public"
  VpcCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  SubnetsCidrBlock:
    Description: |
      Comma-delimited list of CIDR blocks for subnets located in AZ's within the current AWS Regions (e.g. 10.0.1.0/24, 10.0.2.0/24, 10.0.3.0/24).
      Note: The logical order is preserved and must be greater than or equal to the number of subnet selected in the network design pattern field.
    Type: CommaDelimitedList
    Default: "10.0.1.0/24, 10.0.2.0/24, 10.0.3.0/24, 10.0.4.0/24, 10.0.5.0/24, 10.0.6.0/24"

Conditions:
  # parameter conditionals
  1Tier1SubPublic: !Equals [!Ref NetworkDesignPatterns, "1 tier | 1 subnet | public"]
  1Tier2SubPublic: !Equals [!Ref NetworkDesignPatterns, "1 tier | 2 subnet | public"]
  2Tier1SubPublicPrivate1Nat: !Equals [!Ref NetworkDesignPatterns, "2 tier | 1 subnet public | 1 subnet private | 1 nat"]
  2Tier2SubPublicPrivate1Nat: !Equals [!Ref NetworkDesignPatterns, "2 tier | 2 subnets public | 2 subnets private | 1 nat"]
  3Tier1SubPublicPrivate1Nat: !Equals [!Ref NetworkDesignPatterns, "3 tier | 1 subnet public | 1 subnet private | 1 subnet database | 1 nat"]
  3Tier2SubPublicPrivate1Nat: !Equals [!Ref NetworkDesignPatterns, "3 tier | 2 subnets public | 2 subnets private | 2 subnets database | 1 nat"]
  # template conditionals
  1Subnet: !Or
    - !Condition 1Tier1SubPublic
    - !Condition 1Tier2SubPublic
    - !Condition 2Tier1SubPublicPrivate1Nat
    - !Condition 2Tier2SubPublicPrivate1Nat
    - !Condition 3Tier1SubPublicPrivate1Nat
    - !Condition 3Tier2SubPublicPrivate1Nat
  2Subnet: !Or
    - !Condition 1Tier2SubPublic
    - !Condition 2Tier2SubPublicPrivate1Nat
    - !Condition 3Tier2SubPublicPrivate1Nat
  1Nat: !Or
    - !Condition 2Tier1SubPublicPrivate1Nat
    - !Condition 2Tier2SubPublicPrivate1Nat
    - !Condition 3Tier1SubPublicPrivate1Nat
    - !Condition 3Tier2SubPublicPrivate1Nat
  1Tier: !Or 
    - !Condition 1Tier1SubPublic
    - !Condition 1Tier2SubPublic
  2Tier: !Or 
    - !Condition 2Tier1SubPublicPrivate1Nat
    - !Condition 2Tier2SubPublicPrivate1Nat
    - !Condition 3Tier1SubPublicPrivate1Nat
    - !Condition 3Tier2SubPublicPrivate1Nat
  3Tier: !Or
    - !Condition 3Tier1SubPublicPrivate1Nat
    - !Condition 3Tier2SubPublicPrivate1Nat
  # Very complicated logic but it works!
  1Tier1Sub: !Or
    - !Condition 1Subnet
    - !Condition 2Subnet
  1Tier2Sub: !Or
    - !Condition 2Subnet
    - !Condition 1Tier2SubPublic
  2Tier1Sub: !And
    - !Condition 1Subnet
    - !Condition 2Tier
  2Tier2Sub: !And
    - !Condition 2Subnet
    - !Condition 2Tier
  1TierRt: !Or
    - !Condition 1Tier
    - !Condition 2Tier
    - !Condition 3Tier
  2TierRt: !Or
    - !Condition 2Tier
    - !Condition 3Tier

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-vpc-${AWS::StackName}"
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Type
          Value: "Managed by AWS Cloudformation"
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-igw-${AWS::StackName}"
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Type
          Value: "Managed by AWS Cloudformation"
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc
  
  # VPC ROUTES
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  # SUBNETS
  # PUBLIC SUBNETS
  PublicAZASubnet:
    Condition: 1Tier1Sub
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref "AWS::Region"]
      CidrBlock: !Select [0, !Ref SubnetsCidrBlock]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-public-sub1-${AWS::StackName}"
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Type
          Value: "Managed by AWS Cloudformation"
  PublicAZBSubnet:
    Condition: 1Tier2Sub
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref "AWS::Region"]
      CidrBlock: !Select [1, !Ref SubnetsCidrBlock]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-public-sub2-${AWS::StackName}"
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Type
          Value: "Managed by AWS Cloudformation"
  
  # PRIVATE SUBNETS
  PrivateAZASubnet:
    Condition: 2Tier1Sub
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref "AWS::Region"]
      CidrBlock: !Select [2, !Ref SubnetsCidrBlock]
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-private-sub1-${AWS::StackName}"
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Type
          Value: "Managed by AWS Cloudformation"
  PrivateAZBSubnet:
    Condition: 2Tier2Sub
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref "AWS::Region"]
      CidrBlock: !Select [3, !Ref SubnetsCidrBlock]
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-private-sub2-${AWS::StackName}"
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Type
          Value: "Managed by AWS Cloudformation"

  # DATABASE SUBNETS
  
  # ROUTE TABLE
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Condition: 1TierRt
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-public-rt-${AWS::StackName}"
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Type
          Value: "Managed by AWS Cloudformation"
    
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Condition: 2TierRt
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-private-rt-${AWS::StackName}"
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Type
          Value: "Managed by AWS Cloudformation"
        
  # ROUTE ASSOC
  PublicRouteTableAssociation1:
    Condition: 1Tier1Sub
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicAZASubnet
      RouteTableId: !Ref PublicRouteTable

  PublicRouteTableAssociation2:
    Condition: 1Tier2Sub
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicAZBSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTableAssociation1:
    Condition: 2Tier1Sub
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateAZASubnet
      RouteTableId: !Ref PrivateRouteTable

  PrivateRouteTableAssociation2:
    Condition: 2Tier2Sub
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateAZBSubnet
      RouteTableId: !Ref PrivateRouteTable

  # NAT GATEWAYS
  NatEIP1:
    Condition: 1Nat
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway1:
    Condition: 1Nat
    Type: AWS::EC2::NatGateway
    DependsOn: AttachInternetGateway
    Properties:
      AllocationId: !GetAtt NatEIP1.AllocationId
      SubnetId: !Ref PublicAZASubnet
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-ngw1-${AWS::StackName}"
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Type
          Value: "Managed by AWS Cloudformation"
          
  NatRoute1:
    Condition: 1Nat
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

Outputs:
  Vpc:
    Value: !Ref Vpc
  VpcCidr:
    Value: !Ref VpcCidr
  # SubnetsCidrBlock:
  #   Value: !Join
  #     - ","
  #     - !Ref SubnetsCidrBlock
  # PublicAZASubnet:
  #   Condition: 1Subnet
  #   Value: !Ref PublicAZASubnet
  # PublicAZBSubnet:
  #   Condition: 2Subnet
  #   Value: !Ref PublicAZBSubnet
  # PrivateAZASubnet:
  #   Condition: 1Subnet
  #   Value: !Ref PrivateAZASubnet
  # PrivateAZBSubnet:
  #   Condition: 2Subnet
  #   Value: !Ref PrivateAZBSubnet